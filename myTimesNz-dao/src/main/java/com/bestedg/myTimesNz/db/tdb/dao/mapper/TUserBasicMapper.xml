<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bestedg.myTimesNz.db.tdb.dao.TUserBasicMapper" >
  <resultMap id="BaseResultMap" type="com.bestedg.myTimesNz.db.tdb.entity.TUserBasic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="foreign_account_id" property="foreignAccountId" jdbcType="VARCHAR" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="alipay_account" property="alipayAccount" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="account_phone_number" property="accountPhoneNumber" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="TINYINT" />
    <result column="head_portrait" property="headPortrait" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_manager_id" property="createManagerId" jdbcType="INTEGER" />
    <result column="update_manager_id" property="updateManagerId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, foreign_account_id, sn, nickname, password, alipay_account, sex, account_phone_number, 
    email, source, head_portrait, register_time, is_delete, create_time, update_time, 
    create_manager_id, update_manager_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bestedg.myTimesNz.db.tdb.entity.TUserBasicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_basic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user_basic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user_basic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bestedg.myTimesNz.db.tdb.entity.TUserBasic" useGeneratedKeys="true" keyProperty="id" >
    insert into t_user_basic (foreign_account_id, sn, nickname, 
      password, alipay_account, sex, 
      account_phone_number, email, source, 
      head_portrait, register_time, is_delete, 
      create_time, update_time, create_manager_id, 
      update_manager_id)
    values (#{foreignAccountId,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{alipayAccount,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, 
      #{accountPhoneNumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{source,jdbcType=TINYINT}, 
      #{headPortrait,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createManagerId,jdbcType=INTEGER}, 
      #{updateManagerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bestedg.myTimesNz.db.tdb.entity.TUserBasic" useGeneratedKeys="true" keyProperty="id" >
    insert into t_user_basic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="foreignAccountId != null" >
        foreign_account_id,
      </if>
      <if test="sn != null" >
        sn,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="alipayAccount != null" >
        alipay_account,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="accountPhoneNumber != null" >
        account_phone_number,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="headPortrait != null" >
        head_portrait,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createManagerId != null" >
        create_manager_id,
      </if>
      <if test="updateManagerId != null" >
        update_manager_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="foreignAccountId != null" >
        #{foreignAccountId,jdbcType=VARCHAR},
      </if>
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="alipayAccount != null" >
        #{alipayAccount,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="accountPhoneNumber != null" >
        #{accountPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=TINYINT},
      </if>
      <if test="headPortrait != null" >
        #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createManagerId != null" >
        #{createManagerId,jdbcType=INTEGER},
      </if>
      <if test="updateManagerId != null" >
        #{updateManagerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bestedg.myTimesNz.db.tdb.entity.TUserBasic" >
    update t_user_basic
    <set >
      <if test="foreignAccountId != null" >
        foreign_account_id = #{foreignAccountId,jdbcType=VARCHAR},
      </if>
      <if test="sn != null" >
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="alipayAccount != null" >
        alipay_account = #{alipayAccount,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="accountPhoneNumber != null" >
        account_phone_number = #{accountPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=TINYINT},
      </if>
      <if test="headPortrait != null" >
        head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createManagerId != null" >
        create_manager_id = #{createManagerId,jdbcType=INTEGER},
      </if>
      <if test="updateManagerId != null" >
        update_manager_id = #{updateManagerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bestedg.myTimesNz.db.tdb.entity.TUserBasic" >
    update t_user_basic
    set foreign_account_id = #{foreignAccountId,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      alipay_account = #{alipayAccount,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      account_phone_number = #{accountPhoneNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      source = #{source,jdbcType=TINYINT},
      head_portrait = #{headPortrait,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_manager_id = #{createManagerId,jdbcType=INTEGER},
      update_manager_id = #{updateManagerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>