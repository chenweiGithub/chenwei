<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bestedg.myTimesNz.db.tdb.dao.TProductMapper" >
  <resultMap id="BaseResultMap" type="com.bestedg.myTimesNz.db.tdb.entity.TProduct" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="service_items_id" property="serviceItemsId" jdbcType="INTEGER" />
    <result column="hours_id" property="hoursId" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="TINYINT" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="intermediary_proportion" property="intermediaryProportion" jdbcType="DOUBLE" />
    <result column="city_id" property="cityId" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_manager_id" property="createManagerId" jdbcType="INTEGER" />
    <result column="update_manager_id" property="updateManagerId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, service_items_id, hours_id, level, price, intermediary_proportion, city_id, is_delete, 
    create_time, update_time, create_manager_id, update_manager_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bestedg.myTimesNz.db.tdb.entity.TProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bestedg.myTimesNz.db.tdb.entity.TProduct" useGeneratedKeys="true" keyProperty="id" >
    insert into t_product (service_items_id, hours_id, level, 
      price, intermediary_proportion, city_id, 
      is_delete, create_time, update_time, 
      create_manager_id, update_manager_id)
    values (#{serviceItemsId,jdbcType=INTEGER}, #{hoursId,jdbcType=INTEGER}, #{level,jdbcType=TINYINT}, 
      #{price,jdbcType=DECIMAL}, #{intermediaryProportion,jdbcType=DOUBLE}, #{cityId,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createManagerId,jdbcType=INTEGER}, #{updateManagerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bestedg.myTimesNz.db.tdb.entity.TProduct" useGeneratedKeys="true" keyProperty="id" >
    insert into t_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serviceItemsId != null" >
        service_items_id,
      </if>
      <if test="hoursId != null" >
        hours_id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="intermediaryProportion != null" >
        intermediary_proportion,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createManagerId != null" >
        create_manager_id,
      </if>
      <if test="updateManagerId != null" >
        update_manager_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serviceItemsId != null" >
        #{serviceItemsId,jdbcType=INTEGER},
      </if>
      <if test="hoursId != null" >
        #{hoursId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=TINYINT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="intermediaryProportion != null" >
        #{intermediaryProportion,jdbcType=DOUBLE},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createManagerId != null" >
        #{createManagerId,jdbcType=INTEGER},
      </if>
      <if test="updateManagerId != null" >
        #{updateManagerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bestedg.myTimesNz.db.tdb.entity.TProduct" >
    update t_product
    <set >
      <if test="serviceItemsId != null" >
        service_items_id = #{serviceItemsId,jdbcType=INTEGER},
      </if>
      <if test="hoursId != null" >
        hours_id = #{hoursId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="intermediaryProportion != null" >
        intermediary_proportion = #{intermediaryProportion,jdbcType=DOUBLE},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createManagerId != null" >
        create_manager_id = #{createManagerId,jdbcType=INTEGER},
      </if>
      <if test="updateManagerId != null" >
        update_manager_id = #{updateManagerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bestedg.myTimesNz.db.tdb.entity.TProduct" >
    update t_product
    set service_items_id = #{serviceItemsId,jdbcType=INTEGER},
      hours_id = #{hoursId,jdbcType=INTEGER},
      level = #{level,jdbcType=TINYINT},
      price = #{price,jdbcType=DECIMAL},
      intermediary_proportion = #{intermediaryProportion,jdbcType=DOUBLE},
      city_id = #{cityId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_manager_id = #{createManagerId,jdbcType=INTEGER},
      update_manager_id = #{updateManagerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>